services:
  mysql:
    image: mysql:9.1
    environment:
      MYSQL_ROOT_PASSWORD: pass
      MONGO_INITDB_DATABASE: microservices
    ports:
      - "3306:3306"
    volumes:
      - mysql:/var/lib/mysql
    healthcheck:
      test: "/usr/bin/mysql --user=root --password=pass --execute \"SHOW DATABASES;\""
      interval: 5s
      timeout: 2s
      retries: 10

  mongodb:
    image: mongo:8.0.1
    restart: always
    environment:
      MONGO_INITDB_DATABASE: microservices
      MONGO_INITDB_ROOT_USERNAME: user
      MONGO_INITDB_ROOT_PASSWORD: pass
    ports:
      - "27017:27017"
    volumes:
      - mongodb:/data/db
    healthcheck:
      test: "mongostat -n 1"
      interval: 5s
      timeout: 2s
      retries: 10

  zookeeper:
    image: confluentinc/cp-zookeeper:7.7.1
    restart: always
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.7.1
    restart: always
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  grafana:
    image: grafana/grafana:11.3.0
    extra_hosts: [ 'host.docker.internal:host-gateway' ]
    ports:
      - "3000:3000"
    volumes:
      - ./docker/grafana/provisioning/:/etc/grafana/provisioning/
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SECURITY_ADMIN_USER=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    depends_on:
      - prometheus

  prometheus:
    image: prom/prometheus:v2.55.0
    extra_hosts: [ 'host.docker.internal:host-gateway' ]
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - --enable-feature=exemplar-storage
      - --config.file=/etc/prometheus/prometheus.yml

  zipkin:
    image: openzipkin/zipkin:3.4.2
    environment:
      - JAVA_OPTS=-XX:+UnlockExperimentalVMOptions -Djava.security.egd=file:/dev/./urandom
    ports:
      - "9411:9411"
    healthcheck:
      test: [ "CMD", "curl", "-I", "http://zipkin:9411" ]
      interval: 5s
      timeout: 5s
      retries: 10

volumes:
  mysql:
  mongodb: